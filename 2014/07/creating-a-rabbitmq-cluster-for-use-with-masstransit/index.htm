<!doctype html>

<html lang="en-US">
<head>
	<meta charset="UTF-8">
	
	
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

			    
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    
	<title>Creating a RabbitMQ Cluster for Use with MassTransit | Loosely Coupled Labs</title>
    
    <!--[if lte IE 9]>
        <script src="https://looselycoupledlabs.com/wp-content/themes/read-v4-2-4/js/html5shiv.js"></script>
        <script src="https://looselycoupledlabs.com/wp-content/themes/read-v4-2-4/js/selectivizr-min.js"></script>
    <![endif]-->
	
		
	<meta name='robots' content='max-image-preview:large'>
<link rel='dns-prefetch' href='//fonts.googleapis.com'>
<link rel='dns-prefetch' href='//s.w.org'>
<link rel="alternate" type="application/rss+xml" title="Loosely Coupled Labs &raquo; Feed" href="../../../feed/index.htm">
<link rel="alternate" type="application/rss+xml" title="Loosely Coupled Labs &raquo; Comments Feed" href="../../../comments/feed/index.htm">
<link rel="alternate" type="application/rss+xml" title="Loosely Coupled Labs &raquo; Creating a RabbitMQ Cluster for Use with MassTransit Comments Feed" href="feed/index.htm">
		<script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/13.1.0\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/13.1.0\/svg\/","svgExt":".svg","source":{"concatemoji":"https:\/\/looselycoupledlabs.com\/wp-includes\/js\/wp-emoji-release.min.js?ver=5.8.6"}};
			!function(e,a,t){var n,r,o,i=a.createElement("canvas"),p=i.getContext&&i.getContext("2d");function s(e,t){var a=String.fromCharCode;p.clearRect(0,0,i.width,i.height),p.fillText(a.apply(this,e),0,0);e=i.toDataURL();return p.clearRect(0,0,i.width,i.height),p.fillText(a.apply(this,t),0,0),e===i.toDataURL()}function c(e){var t=a.createElement("script");t.src=e,t.defer=t.type="text/javascript",a.getElementsByTagName("head")[0].appendChild(t)}for(o=Array("flag","emoji"),t.supports={everything:!0,everythingExceptFlag:!0},r=0;r<o.length;r++)t.supports[o[r]]=function(e){if(!p||!p.fillText)return!1;switch(p.textBaseline="top",p.font="600 32px Arial",e){case"flag":return s([127987,65039,8205,9895,65039],[127987,65039,8203,9895,65039])?!1:!s([55356,56826,55356,56819],[55356,56826,8203,55356,56819])&&!s([55356,57332,56128,56423,56128,56418,56128,56421,56128,56430,56128,56423,56128,56447],[55356,57332,8203,56128,56423,8203,56128,56418,8203,56128,56421,8203,56128,56430,8203,56128,56423,8203,56128,56447]);case"emoji":return!s([10084,65039,8205,55357,56613],[10084,65039,8203,55357,56613])}return!1}(o[r]),t.supports.everything=t.supports.everything&&t.supports[o[r]],"flag"!==o[r]&&(t.supports.everythingExceptFlag=t.supports.everythingExceptFlag&&t.supports[o[r]]);t.supports.everythingExceptFlag=t.supports.everythingExceptFlag&&!t.supports.flag,t.DOMReady=!1,t.readyCallback=function(){t.DOMReady=!0},t.supports.everything||(n=function(){t.readyCallback()},a.addEventListener?(a.addEventListener("DOMContentLoaded",n,!1),e.addEventListener("load",n,!1)):(e.attachEvent("onload",n),a.attachEvent("onreadystatechange",function(){"complete"===a.readyState&&t.readyCallback()})),(n=t.source||{}).concatemoji?c(n.concatemoji):n.wpemoji&&n.twemoji&&(c(n.twemoji),c(n.wpemoji)))}(window,document,window._wpemojiSettings);
		</script>
		<style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style>
	<link rel='stylesheet' id='wp-block-library-css' href='../../../wp-includes/css/dist/block-library/style.min.css?ver=5.8.6' type='text/css' media='all'>
<link rel='stylesheet' id='unifrakturmaguntia-css' href='../../../css?family=UnifrakturMaguntia&#038;subset=latin' type='text/css' media='all'>
<link rel='stylesheet' id='coustard-css' href='../../../css-1?family=Coustard&#038;subset=latin' type='text/css' media='all'>
<link rel='stylesheet' id='lora-css' href='../../../css-2?family=Lora:400,700,400italic,700italic&#038;subset=latin' type='text/css' media='all'>
<link rel='stylesheet' id='print-css' href='../../../wp-content/themes/read-v4-2-4/css/print.css' type='text/css' media='print'>
<link rel='stylesheet' id='grid-css' href='../../../wp-content/themes/read-v4-2-4/css/grid.css' type='text/css' media='all'>
<link rel='stylesheet' id='normalize-css' href='../../../wp-content/themes/read-v4-2-4/css/normalize.css' type='text/css' media='all'>
<link rel='stylesheet' id='font-awesome-css' href='../../../wp-content/themes/read-v4-2-4/css/font-awesome.css' type='text/css' media='all'>
<link rel='stylesheet' id='google-code-prettify-css' href='../../../wp-content/themes/read-v4-2-4/js/google-code-prettify/prettify.css' type='text/css' media='all'>
<link rel='stylesheet' id='uniform-css' href='../../../wp-content/themes/read-v4-2-4/css/uniform.default.css' type='text/css' media='all'>
<link rel='stylesheet' id='flexslider-css' href='../../../wp-content/themes/read-v4-2-4/css/flexslider.css' type='text/css' media='all'>
<link rel='stylesheet' id='mediaelementplayer-css' href='../../../wp-content/themes/read-v4-2-4/js/mediaelement/mediaelementplayer.css' type='text/css' media='all'>
<link rel='stylesheet' id='gamma-gallery-css' href='../../../wp-content/themes/read-v4-2-4/css/gamma-gallery.css' type='text/css' media='all'>
<link rel='stylesheet' id='main-css' href='../../../wp-content/themes/read-v4-2-4/css/main.css' type='text/css' media='all'>
<link rel='stylesheet' id='fancybox-css' href='../../../wp-content/themes/read-v4-2-4/css/jquery.fancybox-1.3.4.css' type='text/css' media='all'>
<link rel='stylesheet' id='wp-fix-css' href='../../../wp-content/themes/read-v4-2-4/css/wp-fix.css' type='text/css' media='all'>
<script type='text/javascript' src='../../../wp-includes/js/jquery/jquery.min.js?ver=3.6.0' id='jquery-core-js'></script>
<script type='text/javascript' src='../../../wp-includes/js/jquery/jquery-migrate.min.js?ver=3.3.2' id='jquery-migrate-js'></script>
<link rel="https://api.w.org/" href="../../../wp-json/index.htm"><link rel="alternate" type="application/json" href="../../../wp-json/wp/v2/posts/46"><link rel="EditURI" type="application/rsd+xml" title="RSD" href="../../../xmlrpc.php?rsd">
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="../../../wp-includes/wlwmanifest.xml"> 
<meta name="generator" content="WordPress 5.8.6">
<link rel="canonical" href="index.htm">
<link rel='shortlink' href='index.htm?p=46'>
<link rel="alternate" type="application/json+oembed" href="../../../wp-json/oembed/1.0/embed-22?url=https%3A%2F%2Flooselycoupledlabs.com%2F2014%2F07%2Fcreating-a-rabbitmq-cluster-for-use-with-masstransit%2F">
<link rel="alternate" type="text/xml+oembed" href="../../../wp-json/oembed/1.0/embed-23?url=https%3A%2F%2Flooselycoupledlabs.com%2F2014%2F07%2Fcreating-a-rabbitmq-cluster-for-use-with-masstransit%2F&#038;format=xml">

<link rel="stylesheet" type="text/css" href="../../../wp-content/themes/read-v4-2-4/style.css">

		
<link rel="stylesheet" type="text/css" href="../../../css-1?family=Coustard&subset=latin">
<link rel="stylesheet" type="text/css" href="../../../css-1?family=Coustard&subset=latin">
<link rel="stylesheet" type="text/css" href="../../../css-1?family=Coustard&subset=latin">
<link rel="stylesheet" type="text/css" href="../../../css-3?family=Lora&subset=latin">
<style type="text/css">
a { color: #4488ff; }

a:hover { color: #3377ee; }

.main-navigation ul .current_page_item > a, .main-navigation ul .current-menu-item > a { color: #69be28; }

h1.site-title, h1.site-title a { font-family: "Coustard", Georgia, serif; }

h1, h2, h3, h4, h5, h6 { font-family: "Coustard", Georgia, serif; }

.main-navigation ul li { font-family: "Coustard", Georgia, serif; }

html { font-family: "Lora", Georgia, serif; }
</style>
		<style type="text/css">
.site-header hgroup {
  padding: 0;
}

h1.site-title {
  font-size: 2.20em;
}

.site-header {
  padding-bottom: 0;
}

table {
  border-collapse: collapse;     
}

table, th, td {
  border: 1px solid black;
}

th, td {
  padding: 8px;
}

code {
  box-shadow: none;
}
</style>
<script type="text/javascript" src="../../../syntaxhighlighter/scripts/shCore.js"></script>
<script type="text/javascript" src="../../../syntaxhighlighter/scripts/shBrushCSharp.js"></script>
<script type="text/javascript" src="../../../syntaxhighlighter/scripts/shBrushPowerShell.js"></script>
<script type="text/javascript" src="../../../syntaxhighlighter/scripts/shBrushXml.js"></script>
<script type="text/javascript" src="../../../syntaxhighlighter/scripts/shBrushJScript.js"></script>
<script type="text/javascript" src="../../../syntaxhighlighter/scripts/shBrushPlain.js"></script>
<link href="../../../syntaxhighlighter/styles/shCore.css" rel="stylesheet" type="text/css">
<link href="../../../syntaxhighlighter/styles/shThemeDefault.css" rel="stylesheet" type="text/css">
</head>

<body class="post-template-default single single-post postid-46 single-format-standard">

    <div id="page" class="hfeed site"> 
        <header class="site-header wrapper" role="banner">
			<div class="row">
			    <hgroup>
					<h1 class="site-title">
															<a rel="home" href="../../../index.htm">
										<img alt="Loosely Coupled Labs" src="../../../wp-content/uploads/2014/06/loosely600-300x105.png">
									</a>
													</h1>
					<!-- end .site-title -->
					
					<h2 class="site-description">
						**ARCHIVED** A Blog Loosely Related to System Architecture by David Prothero **ARCHIVED**					</h2>
					<!-- end .site-description -->
			    </hgroup>
				
								
			    <nav id="site-navigation" class="main-navigation" role="navigation">
					<ul class="menu-default"><li class="page_item page-item-39"><a href="../../../about-me/index.htm">About Me</a></li><li class="page_item page-item-226"><a href="../../../subscribe/index.htm">Subscribe</a></li></ul>
			    </nav>
			    <!-- end #site-navigation -->
			</div>
			<!-- end .row -->
        </header>
        <!-- end .site-header -->
		
				
        <section id="main" class="middle wrapper">
			<div class="row row-fluid ">
<div id="primary" class="site-content">
	<div id="content" role="main">
		<div class="readable-content blog-single">
										<article id="post-46" class="clearfix post-46 post type-post status-publish format-standard has-post-thumbnail hentry category-tutorial tag-masstransit tag-rabbitmq tag-service-bus tag-soa">
								<header class="entry-header">
																		<h1 class="entry-title">Creating a RabbitMQ Cluster for Use with MassTransit</h1>
								</header>
								<!-- end .entry-header -->
								
								<div class="entry-meta">
									<span class="post-category">
										posted in <a href="../../../category/tutorial/index.htm" rel="category tag">Tutorial</a>									</span>
									<!-- end .post-category -->
									
									<span class="post-date">
										on <a rel="bookmark" title="1:09 am" href="index.htm"><time class="entry-date" datetime="2012-11-09T23:15:57+00:00">July 9, 2014</time></a>
									</span>
									<!-- end .post-date -->
									
									<span class="by-author"> by										<span class="author vcard">
											<a class="url fn n" rel="author" title="View all posts by david@prothero.com" href="../../../author/davidprothero-com/index.htm">david@prothero.com</a>
										</span>
										<!-- end .author -->
									</span>
									<!-- end .by-author -->
									
									<div class="share-links">
	<a>SHARE</a>
	
	<div class="share-wrap">
		<div class="facebook-wrap">
			<div id="fb-root"></div>
			
			<script>
				(function(d, s, id)
				{
					var js, fjs = d.getElementsByTagName(s)[0];
					if (d.getElementById(id)) return;
					js = d.createElement(s); js.id = id;
					js.src = "//connect.facebook.net/en_US/all.js#xfbml=1";
					fjs.parentNode.insertBefore(js, fjs);
				}(document, 'script', 'facebook-jssdk'));
			</script>
			
			<div class="fb-like" data-send="false" data-layout="button_count" data-width="400" data-show-faces="false" data-colorscheme="light" data-action="like"></div>
		</div>
		<!-- end .facebook-wrap -->
		
		<div class="twitter-wrap">
						<a href="https://twitter.com/share" class="twitter-share-button">Tweet</a>
			
			<script>
				!function(d, s, id)
				{
					var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}
				}(document, "script", "twitter-wjs");
			</script>
		</div>
		<!-- end .twitter-wrap -->
		
		<div class="google-wrap">
			<!-- Place this tag where you want the +1 button to render. -->
			<div class="g-plusone" data-size="medium"></div>
			
			<!-- Place this tag after the last +1 button tag. -->
			<script type="text/javascript">
			  (function()
			  {
				var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
				po.src = 'https://apis.google.com/js/plusone.js';
				var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
			  })();
			</script>
		</div>
		<!-- end .google-wrap -->
		
		<div class="pinterest-wrap">
						
			<a href="http://pinterest.com/pin/create/button/?url=https://looselycoupledlabs.com/2014/07/creating-a-rabbitmq-cluster-for-use-with-masstransit/&media=https://looselycoupledlabs.com/wp-content/uploads/2014/07/iStock_000005276021ExtraSmall.jpg&description=Creating a RabbitMQ Cluster for Use with MassTransit" class="pin-it-button" count-layout="horizontal"><img src="../../../images/PinExt.png" alt="Pin It" title="Pin It"></a>
			
			<script type="text/javascript" src="../../../js/pinit.js"></script>
		</div>
		<!-- end .pinterest-wrap -->
	</div>
	<!-- end .share-wrap -->
</div>	
<!-- end .share-links -->									
																	</div>
								<!-- end .entry-meta -->
								
																			<div class="featured-image">
												<img width="253" height="230" src="../../../wp-content/uploads/2014/07/iStock_000005276021ExtraSmall.jpg" class="attachment-full size-full wp-post-image" alt="Creating a RabbitMQ Cluster for Use with MassTransit" loading="lazy" title="" srcset="../../../wp-content/uploads/2014/07/iStock_000005276021ExtraSmall.jpg 253w, ../../../wp-content/uploads/2014/07/iStock_000005276021ExtraSmall-150x136.jpg 150w, ../../../wp-content/uploads/2014/07/iStock_000005276021ExtraSmall-200x181.jpg 200w" sizes="(max-width: 253px) 100vw, 253px">											</div>
											<!-- end .featured-image -->
																		
								<div class="entry-content clearfix">
									<p>In my last post, <a title="A Simple MassTransit Publish/Subscribe Example" href="../../06/masstransit-publish-subscribe-example/index.htm">A Simple MassTransit Publish/Subscribe Example</a>, we looked at how to build basic publishers and subscribers using <a href="http://masstransit-project.com/" target="_blank">MassTransit</a> and <a href="http://www.rabbitmq.com/" target="_blank">RabbitMQ</a>. In the example, however, we were only using a single RabbitMQ instance on a single machine. In the real world, your publishers are most likely to live on separate machines from your subscribers. To do that, we need to set up a RabbitMQ cluster.</p>
<h1>RabbitMQ Clustering</h1>
<p>A RabbitMQ cluster (or <em>broker</em>) can consist of multiple nodes, each running an instance of the RabbitMQ application. All of the nodes will share configuration information, such as users, exchanges, and queues. Recall from our <a title="A Simple MassTransit Publish/Subscribe Example" href="../../06/masstransit-publish-subscribe-example/index.htm" target="_blank">last discussion</a> that an exchange is like a post office and a queue is like an actual mailbox containing the resting place of messages. The actual queue, or mailbox, only lives on the node where the queue was created, but the knowledge of the queue&#8217;s existence is shared by the cluster, as is the full routing information contained in the exchanges. (Note that queues can be replicated for high-availability requirements, which we may cover in a future post.)</p>
<h2>A Common Clustering Pattern</h2>
<p>A pattern I like to use for clustering RabbitMQ nodes is to have a node live on each machine that participates in the overall application. For example, I will install instances of RabbitMQ on each web server that makes up a web application and will be publishing messages related to the application. Then, I will install an instance of RabbitMQ on each machine that will be running a service that will subscribe to the messages. The diagram below illustrates this pattern.</p>
<p><a href="http://www.lucidchart.com/invitations/accept/a3a1a30a-0072-4437-9945-7cdaca22add0" target="_blank"><img loading="lazy" class="alignnone size-full wp-image-80" src="../../../wp-content/uploads/2014/07/RabbitMQ-Cluster-Diagram-New-Page.png" alt="RabbitMQ Cluster Diagram" width="800" height="460" srcset="../../../wp-content/uploads/2014/07/RabbitMQ-Cluster-Diagram-New-Page.png 800w, ../../../wp-content/uploads/2014/07/RabbitMQ-Cluster-Diagram-New-Page-300x172.png 300w, ../../../wp-content/uploads/2014/07/RabbitMQ-Cluster-Diagram-New-Page-150x86.png 150w, ../../../wp-content/uploads/2014/07/RabbitMQ-Cluster-Diagram-New-Page-400x230.png 400w, ../../../wp-content/uploads/2014/07/RabbitMQ-Cluster-Diagram-New-Page-200x115.png 200w" sizes="(max-width: 800px) 100vw, 800px"></a></p>
<h1>Setting Up the Cluster</h1>
<p>For the purposes of this example, we are going to assume you have two Windows machines (virtual or otherwise) named Publisher and Subscriber. Install RabbitMQ on each of these machines, referring to the installation instructions in my <a title="A Simple MassTransit Publish/Subscribe Example" href="../../06/masstransit-publish-subscribe-example/index.htm" target="_blank">previous blog post</a>.</p>
<h2>Erlang Cookie</h2>
<p>The first thing that needs to be done is to set up the Erlang cookie on each machine so that the cookies are the same. (Remember, RabbitMQ is an Erlang application.) ASP.NET developers may be familiar with the concept of creating a common Machine Key for a cluster of web servers. The Erlang cookie is a corollary to this process. It is a key that indicates that the multiple Erlang nodes can communicate with each other. All the nodes in a RabbitMQ cluster must have the same Erlang cookie.</p>
<p>When installing Erlang on Windows and installing RabbitMQ as a Windows Service, the Erlang cookie is placed in two locations – <strong>C:\Users\<em>Current User </em></strong>and <strong>C:\Windows</strong>. The <a href="http://www.rabbitmq.com/clustering.html" target="_blank">RabbitMQ clustering guide</a> recommends making sure all of the cookies on the machine are the same. Copy the cookie from <strong>C:\Windows </strong>on the Publisher machine to <strong>C:\Users\<em>Current User </em></strong>on the same machine and then to both <strong>C:\Users\<em>Current User </em></strong>and <strong>C:\Windows </strong>on the Subscriber machine. All four cookies should have identical content (you can inspect with Notepad to be sure).</p>
<p>Restart the RabbitMQ service on both machines.</p>
<h2>Final Cluster Setup</h2>
<p>If you&#8217;ve got the Windows Firewall turned on, be sure to allow incoming TCP traffic on ports 4369 and 25672 on both the Publisher and Subscriber machines.</p>
<p>Now, from the <span style="text-decoration: underline;">Subscriber</span> machine, open up the <span style="color: #444444;">“RabbitMQ Command Prompt (sbin dir)” item (added by the RabbitMQ installer). Run the following commands:</span></p>
<pre class="brush: ps; toolbar: false;">&gt; rabbitmqctl stop_app
&gt; rabbitmqctl join_cluster rabbit@Publisher</pre>
<p>What we are doing here is telling the instance of RabbitMQ running on the Subscriber machine that we want to join a cluster that is hosted by the Publisher machine (which is currently a cluster of one). Restart the RabbitMQ Windows service after running this command.</p>
<h2>Inspecting Your Cluster</h2>
<p>Now, on either the Publisher or the Subscriber, open the web-based management console at <a href="http://localhost:15672/" target="_blank">http://localhost:15672/</a>. (Recall from our <a title="A Simple MassTransit Publish/Subscribe Example" href="../../06/masstransit-publish-subscribe-example/index.htm" target="_blank">previous post</a> that the web-based management console is a plugin we need to install.) On the first page, you will see the details of our newly created, multi-node cluster!</p>
<p><img loading="lazy" class="alignnone size-full wp-image-74" src="../../../wp-content/uploads/2014/07/rabbitmq-cluster.png" alt="rabbitmq-cluster" width="151" height="213" srcset="../../../wp-content/uploads/2014/07/rabbitmq-cluster.png 151w, ../../../wp-content/uploads/2014/07/rabbitmq-cluster-150x211.png 150w" sizes="(max-width: 151px) 100vw, 151px"></p>
<h1>MassTransit in Action</h1>
<p>Now let&#8217;s put our cluster to the test. Build the <a href="https://github.com/dprothero/MtPubSubExample" target="_blank">sample applications</a> that we created in the <a title="A Simple MassTransit Publish/Subscribe Example" href="../../06/masstransit-publish-subscribe-example/index.htm" target="_blank">previous post</a>. Copy the contents of <strong>TestPublisher\bin\Debug</strong> to a folder on the Publisher. Likewise, copy the contents of <strong>TestSubscriber\bin\Debug</strong> to a folder on the Subscriber.</p>
<p>Launch TestSubscriber.exe on the Subscriber machine first. Then, launch TestPublisher on the Publisher machine. Finally, send a message from the Publisher, and watch it appear on the Subscriber.</p>
<p><img loading="lazy" class="alignnone size-full wp-image-76" src="../../../wp-content/uploads/2014/07/rabbitmq-cluster-example.png" alt="rabbitmq-cluster-example" width="694" height="373" srcset="../../../wp-content/uploads/2014/07/rabbitmq-cluster-example.png 694w, ../../../wp-content/uploads/2014/07/rabbitmq-cluster-example-300x161.png 300w, ../../../wp-content/uploads/2014/07/rabbitmq-cluster-example-150x80.png 150w, ../../../wp-content/uploads/2014/07/rabbitmq-cluster-example-400x214.png 400w, ../../../wp-content/uploads/2014/07/rabbitmq-cluster-example-200x107.png 200w" sizes="(max-width: 694px) 100vw, 694px"></p>
<p>Notice how we didn&#8217;t have to modify any code in the sample application? This is because we set up the code to connect to RabbitMQ on localhost. Because each local instance of RabbitMQ on the two machines was part of a single cluster, they shared information about the exchanges and queues necessary to make the MassTransit service bus work its magic, as if there were only a single RabbitMQ instance!</p>
<h1>What&#8217;s Next?</h1>
<p>Next up, we&#8217;ll take a look at scaling this up to a real-world example. We&#8217;ll create an ASP.NET web application that can publish messages and a custom Windows service that can be our subscriber of the messages. Down the road, we&#8217;ll look at having multiple subscribers for the same message type in two different patterns: one for scaling out message processing and another for having different processing occur in separate Windows services.</p>
<p>As always, please send your suggestions for things you&#8217;d like to learn how to do with MassTransit.</p>
									
																	</div>
								<!-- end .entry-content -->
								
																			<footer class="entry-meta post-tags">
												<a href="../../../tag/masstransit/index.htm" rel="tag">MassTransit</a>, <a href="../../../tag/rabbitmq/index.htm" rel="tag">RabbitMQ</a>, <a href="../../../tag/service-bus/index.htm" rel="tag">Service Bus</a>, <a href="../../../tag/soa/index.htm" rel="tag">SOA</a>											</footer>
											<!-- end .entry-meta -->
																	</article>
							<!-- end .hentry -->
							
							<aside class="about-author">
	<h3>ABOUT THE AUTHOR</h3>
	
	<div class="row-fluid author-bio">
		<div class="span2 author-img">
			<a href="../../../author/davidprothero-com/index.htm">
				<img alt='david@prothero.com' src='../../../avatar/a0c880ad31c66856b29f53e6c32d688b.jpeg?s=226&#038;d=mm&#038;r=g' srcset='../../../avatar/a0c880ad31c66856b29f53e6c32d688b-1.jpeg 2x?s=452&#038;d=mm&#038;r=g 2x' class='avatar avatar-226 photo' height='226' width='226' loading='lazy'>			</a>
		</div>
		<!-- end .author-img -->
		
		<div class="span10 author-info">
			<h4 class="author-name">david@prothero.com</h4>
			
			<p>
				I have been providing technical leadership for companies for over 15 years. However, my software engineering experience extends back over 25 years. Currently, I am a Developer Educator for Twilio. Prior to that, I served as both IT Director and Software Engineering Director for Therapeutic Research Center (TRC). I guided the company from a print-based newsletter company to an online information services company.			</p>
		</div>
		<!-- end .author-info -->
	</div>
	<!-- end .author-bio -->
</aside>
<!-- end .about-author -->							
							<nav class="row-fluid nav-single">
								<div class="span6 nav-previous">
									<h4>PREVIOUS POST</h4><a href="../../06/masstransit-publish-subscribe-example/index.htm" rel="prev"><span class="meta-nav">&#8592;</span> A Simple MassTransit Publish/Subscribe Example</a>								</div>
								<!-- end .nav-previous -->
								
								<div class="span6 nav-next">
									<h4>NEXT POST</h4><a href="../a-real-world-masstransit-customer-portal-example/index.htm" rel="next">A Real-World MassTransit Customer Portal Example <span class="meta-nav">&#8594;</span></a>								</div>
								<!-- end .nav-next -->
							</nav>
							<!-- end .nav-single -->
							
							
<div id="comments" class="comments-area">
					<h2 class="comments-title">
					20 Comments <span class="on">&#8594;</span> <span>Creating a RabbitMQ Cluster for Use with MassTransit</span>				</h2>
				<!-- end .comments-title -->
				
				<ol class="commentlist">
										
					<li class="comment even thread-even depth-1" id="li-comment-3">
						<article id="comment-3" class="comment">
							<header class="comment-meta comment-author vcard">
								<img alt='' src='../../../avatar/695e2a956b2dcb5ac45a7095b6ee338a.jpeg?s=75&#038;d=mm&#038;r=g' srcset='../../../avatar/695e2a956b2dcb5ac45a7095b6ee338a-1.jpeg 2x?s=150&#038;d=mm&#038;r=g 2x' class='avatar avatar-75 photo' height='75' width='75' loading='lazy'><cite class="fn">jsonmez </cite><a href="index.htm#comment-3"><time datetime="2014-07-10T15:01:00+00:00">July 10, 2014 at 3:01 pm</time></a>							</header>
							<!-- end .comment-meta -->
							
														
							<section class="comment-content comment">
								<p>Happy to be the first to comment here. Great post. Well explained and clearly thought out. Bookmarking.</p>
								
															</section>
							<!-- end .comment-content -->
							
							<div class="reply">
															</div>
							<!-- end .reply -->
						</article>
						<!-- end #comment-## -->
					</li><!-- #comment-## -->
					
					<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-4">
						<article id="comment-4" class="comment">
							<header class="comment-meta comment-author vcard">
								<img alt='' src='../../../avatar/0e12b6dc468379c7067c55f2fa609c37.jpeg?s=75&#038;d=mm&#038;r=g' srcset='../../../avatar/0e12b6dc468379c7067c55f2fa609c37-1.jpeg 2x?s=150&#038;d=mm&#038;r=g 2x' class='avatar avatar-75 photo' height='75' width='75' loading='lazy'><cite class="fn">PhatBoyG </cite><a href="index.htm#comment-4"><time datetime="2014-07-15T14:57:00+00:00">July 15, 2014 at 2:57 pm</time></a>							</header>
							<!-- end .comment-meta -->
							
														
							<section class="comment-content comment">
								<p>Two great posts so far, keep up the excellent writing!</p>
<p>Also, I&#8217;d be happy to explain how HA queues come into play if you want to post about that. In our case, we prefix every queue that needs to be HA with the &#8220;ha-&#8221; prefix, and then use a cluster policy to set HA on any queue that matches the name. Makes it easy to opt-in to high-availability (mirroring of queue content) queues.</p>
								
															</section>
							<!-- end .comment-content -->
							
							<div class="reply">
															</div>
							<!-- end .reply -->
						</article>
						<!-- end #comment-## -->
					</li><!-- #comment-## -->
					
					<li class="comment even thread-even depth-1" id="li-comment-5">
						<article id="comment-5" class="comment">
							<header class="comment-meta comment-author vcard">
								<img alt='' src='../../../avatar/a0c880ad31c66856b29f53e6c32d688b-2.jpeg?s=75&#038;d=mm&#038;r=g' srcset='../../../avatar/a0c880ad31c66856b29f53e6c32d688b-3.jpeg 2x?s=150&#038;d=mm&#038;r=g 2x' class='avatar avatar-75 photo' height='75' width='75' loading='lazy'><cite class="fn">dprothero </cite><a href="index.htm#comment-5"><time datetime="2014-07-16T04:12:00+00:00">July 16, 2014 at 4:12 am</time></a>							</header>
							<!-- end .comment-meta -->
							
														
							<section class="comment-content comment">
								<p>Thanks Chris and John! Appreciate the words of encouragement!</p>
								
															</section>
							<!-- end .comment-content -->
							
							<div class="reply">
															</div>
							<!-- end .reply -->
						</article>
						<!-- end #comment-## -->
					</li><!-- #comment-## -->
					
					<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-24">
						<article id="comment-24" class="comment">
							<header class="comment-meta comment-author vcard">
								<img alt='' src='../../../avatar/6b850807b9a707f8516ecb374fbe2ff0.png?s=75&#038;d=mm&#038;r=g' srcset='../../../avatar/6b850807b9a707f8516ecb374fbe2ff0-1.png 2x?s=150&#038;d=mm&#038;r=g 2x' class='avatar avatar-75 photo' height='75' width='75' loading='lazy'><cite class="fn">Andrew Lane </cite><a href="index.htm#comment-24"><time datetime="2014-12-01T21:13:00+00:00">December 1, 2014 at 9:13 pm</time></a>							</header>
							<!-- end .comment-meta -->
							
														
							<section class="comment-content comment">
								<p>David, your blog post outlines a method for setting up a RabbitMQ cluster.  In a PROD environment with, let&#8217;s say, 50 web servers and 10 back-end processing servers, we&#8217;d be talking about a RabbitMQ cluster with 60 nodes, correct?  Do people actually do that in the real world?</p>
								
															</section>
							<!-- end .comment-content -->
							
							<div class="reply">
															</div>
							<!-- end .reply -->
						</article>
						<!-- end #comment-## -->
					<ol class="children">
					
					<li class="comment even depth-2" id="li-comment-25">
						<article id="comment-25" class="comment">
							<header class="comment-meta comment-author vcard">
								<img alt='' src='../../../avatar/a0c880ad31c66856b29f53e6c32d688b-2.jpeg?s=75&#038;d=mm&#038;r=g' srcset='../../../avatar/a0c880ad31c66856b29f53e6c32d688b-3.jpeg 2x?s=150&#038;d=mm&#038;r=g 2x' class='avatar avatar-75 photo' height='75' width='75' loading='lazy'><cite class="fn">dprothero </cite><a href="index.htm#comment-25"><time datetime="2014-12-02T13:08:00+00:00">December 2, 2014 at 1:08 pm</time></a>							</header>
							<!-- end .comment-meta -->
							
														
							<section class="comment-content comment">
								<p>I don&#8217;t know, honestly. It does not seem likely to me. I did a little research and couldn&#8217;t find examples of anyone doing an actual RabbitMQ cluster that big. You may be better off (or at least in the majority) with more of a centralized broker setup. Create a cluster of 2 or 3 RabbitMQ machines and put them behind a load-balancer or heartbeat/keepalive virtual IP for HA.</p>
<p>MSMQ deployments definitely do reach that scale and beyond, but that&#8217;s because they don&#8217;t have to share any state, so they aren&#8217;t replicating any data back and forth. You need a separate database of some kind to keep track of subscriptions.</p>
								
															</section>
							<!-- end .comment-content -->
							
							<div class="reply">
															</div>
							<!-- end .reply -->
						</article>
						<!-- end #comment-## -->
					</li><!-- #comment-## -->
					
					<li class="comment odd alt depth-2" id="li-comment-84">
						<article id="comment-84" class="comment">
							<header class="comment-meta comment-author vcard">
								<img alt='' src='../../../avatar/713d5b40037d18409eb08cc47e5aaf60.jpeg?s=75&#038;d=mm&#038;r=g' srcset='../../../avatar/713d5b40037d18409eb08cc47e5aaf60-1.jpeg 2x?s=150&#038;d=mm&#038;r=g 2x' class='avatar avatar-75 photo' height='75' width='75' loading='lazy'><cite class="fn">Michael Denny </cite><a href="index.htm#comment-84"><time datetime="2016-04-13T15:32:00+00:00">April 13, 2016 at 3:32 pm</time></a>							</header>
							<!-- end .comment-meta -->
							
														
							<section class="comment-content comment">
								<p>In our scenario that is that big, we have 4 centralized brokers as state by Andrew, that are in cluster+HA(+sharding work in progress).</p>
								
															</section>
							<!-- end .comment-content -->
							
							<div class="reply">
															</div>
							<!-- end .reply -->
						</article>
						<!-- end #comment-## -->
					</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
					
					<li class="comment even thread-even depth-1" id="li-comment-28">
						<article id="comment-28" class="comment">
							<header class="comment-meta comment-author vcard">
								<img alt='' src='../../../avatar/3992ceb74b3472c8a406a1100d357bf0.jpeg?s=75&#038;d=mm&#038;r=g' srcset='../../../avatar/3992ceb74b3472c8a406a1100d357bf0-1.jpeg 2x?s=150&#038;d=mm&#038;r=g 2x' class='avatar avatar-75 photo' height='75' width='75' loading='lazy'><cite class="fn">David McClelland </cite><a href="index.htm#comment-28"><time datetime="2015-01-04T03:36:00+00:00">January 4, 2015 at 3:36 am</time></a>							</header>
							<!-- end .comment-meta -->
							
														
							<section class="comment-content comment">
								<p>Fantastic series!  I really appreciate you starting small, but then scaling up to real-world examples.</p>
<p>For monitoring RabbitMQ (example:  I need our technical operations support team to be notified if RabbitMQ goes down), have you ever integrated it with something like SCOM (Microsoft System Center Operations Manager)?</p>
								
															</section>
							<!-- end .comment-content -->
							
							<div class="reply">
															</div>
							<!-- end .reply -->
						</article>
						<!-- end #comment-## -->
					<ol class="children">
					
					<li class="comment odd alt depth-2" id="li-comment-30">
						<article id="comment-30" class="comment">
							<header class="comment-meta comment-author vcard">
								<img alt='' src='../../../avatar/a0c880ad31c66856b29f53e6c32d688b-2.jpeg?s=75&#038;d=mm&#038;r=g' srcset='../../../avatar/a0c880ad31c66856b29f53e6c32d688b-3.jpeg 2x?s=150&#038;d=mm&#038;r=g 2x' class='avatar avatar-75 photo' height='75' width='75' loading='lazy'><cite class="fn">dprothero </cite><a href="index.htm#comment-30"><time datetime="2015-01-05T14:24:00+00:00">January 5, 2015 at 2:24 pm</time></a>							</header>
							<!-- end .comment-meta -->
							
														
							<section class="comment-content comment">
								<p>I haven&#8217;t used it with SCOM, no. Take a look (if you haven&#8217;t already) at my post on Monitoring RabbitMQ: <a href="../../08/monitoring-rabbitmq/index.htm" rel="nofollow ugc">http://looselycoupledlabs.com/2014/08/monitoring-rabbitmq/</a></p>
<p>The basic pattern for integrating with any monitoring system would be to write a command line tool with C# (or PowerShell if you prefer) that extracts the metrics you are looking for (and of course, if it can&#8217;t connect at all, that&#8217;s a server down scenario) and then write the appropriate script to get that info into your monitoring tool. (For Nagios, I use the NSCA client to send passive checks into Nagios.)</p>
<p>So far, some googling hasn&#8217;t produced a completed example solution for monitoring RabbitMQ from SCOM. There&#8217;s people doing it, just no canned solutions available. Maybe you could be the first!</p>
<p>Good luck.</p>
								
															</section>
							<!-- end .comment-content -->
							
							<div class="reply">
															</div>
							<!-- end .reply -->
						</article>
						<!-- end #comment-## -->
					</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
					
					<li class="comment even thread-odd thread-alt depth-1" id="li-comment-37">
						<article id="comment-37" class="comment">
							<header class="comment-meta comment-author vcard">
								<img alt='' src='../../../avatar/949d9cdc11176d07c35c38ff7bfd1593.png?s=75&#038;d=mm&#038;r=g' srcset='../../../avatar/949d9cdc11176d07c35c38ff7bfd1593-1.png 2x?s=150&#038;d=mm&#038;r=g 2x' class='avatar avatar-75 photo' height='75' width='75' loading='lazy'><cite class="fn">Faisal Nadeem </cite><a href="index.htm#comment-37"><time datetime="2015-01-11T16:36:00+00:00">January 11, 2015 at 4:36 pm</time></a>							</header>
							<!-- end .comment-meta -->
							
														
							<section class="comment-content comment">
								<p>Hey David. Thanks for such a great tutorial.</p>
<p>Actually i have create a setup according to your tutorial.</p>
<p>Here is my structure:-</p>
<p>-Two virtual web servers acting as publishers (using load balancing)</p>
<p>-Two virtual clustered servers acting as subscribers</p>
<p>-One virtual server to handle subscribers subscriptions (name: Submaster)</p>
<p>I have installed RabbitMq server on both web servers and Submaster.</p>
<p>Other two clustered virtual servers are using queue (rabbitmq://Submaster/Subscriber) from Submaster.</p>
<p>When i inspect my consumer, it is getting the request but throwing exception when responding.</p>
<p>Here is exception:-<br>
&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;<br>
2015-01-11 19:34:21,280 [4] ERROR MassTransit.Context.ServiceBusReceiveContext [</p>
<p>(null)] &#8211; &#8216;System.Action`1[[MassTransit.IConsumeContext, MassTransit, Version=2.</p>
<p>9.0.0, Culture=neutral, PublicKeyToken=b8e0e9f2f1e657fa]]&#8217; threw an exception co</p>
<p>nsuming message &#8216;MassTransit.Context.ReceiveContext&#8217;</p>
<p>MassTransit.Exceptions.SendException: rabbitmq://localhost/SAPTCO.WebWare1 =&gt; An</p>
<p> exception was thrown during Send &#8212;&gt; RabbitMQ.Client.Exceptions.BrokerUnreacha</p>
<p>bleException: None of the specified endpoints were reachable &#8212;&gt; RabbitMQ.Clien</p>
<p>t.Exceptions.ConnectFailureException: Connection failed &#8212;&gt; System.Net.Sockets.</p>
<p>SocketException: No connection could be made because the target machine actively</p>
<p> refused it 127.0.0.1:5672</p>
								
															</section>
							<!-- end .comment-content -->
							
							<div class="reply">
															</div>
							<!-- end .reply -->
						</article>
						<!-- end #comment-## -->
					<ol class="children">
					
					<li class="comment odd alt depth-2" id="li-comment-38">
						<article id="comment-38" class="comment">
							<header class="comment-meta comment-author vcard">
								<img alt='' src='../../../avatar/a0c880ad31c66856b29f53e6c32d688b-2.jpeg?s=75&#038;d=mm&#038;r=g' srcset='../../../avatar/a0c880ad31c66856b29f53e6c32d688b-3.jpeg 2x?s=150&#038;d=mm&#038;r=g 2x' class='avatar avatar-75 photo' height='75' width='75' loading='lazy'><cite class="fn">dprothero </cite><a href="index.htm#comment-38"><time datetime="2015-01-11T18:47:00+00:00">January 11, 2015 at 6:47 pm</time></a>							</header>
							<!-- end .comment-meta -->
							
														
							<section class="comment-content comment">
								<p>According the exception text, your Send is trying to go to rabbitmq://localhost/SAPTCO.WebWare1</p>
								
															</section>
							<!-- end .comment-content -->
							
							<div class="reply">
															</div>
							<!-- end .reply -->
						</article>
						<!-- end #comment-## -->
					<ol class="children">
					
					<li class="comment even depth-3" id="li-comment-39">
						<article id="comment-39" class="comment">
							<header class="comment-meta comment-author vcard">
								<img alt='' src='../../../avatar/949d9cdc11176d07c35c38ff7bfd1593.png?s=75&#038;d=mm&#038;r=g' srcset='../../../avatar/949d9cdc11176d07c35c38ff7bfd1593-1.png 2x?s=150&#038;d=mm&#038;r=g 2x' class='avatar avatar-75 photo' height='75' width='75' loading='lazy'><cite class="fn">Faisal Nadeem </cite><a href="index.htm#comment-39"><time datetime="2015-01-11T21:12:00+00:00">January 11, 2015 at 9:12 pm</time></a>							</header>
							<!-- end .comment-meta -->
							
														
							<section class="comment-content comment">
								<p>Dear i need your guidance.</p>
<p>Actually i have already explained my structure. Please tell me i am wrong anyware.</p>
<p>-Two virtual web servers acting as publishers (using load balancing)<br>
-Two virtual clustered servers acting as subscribers<br>
-One virtual server to handle subscribers subscriptions (Submaster)<br>
-Two web servers and One virtual server (Submaster) are clustered through RabbitMQ.</p>
<p>I have installed RabbitMq server on both web servers and Submaster and clustered them.</p>
<p>Do i need to install RabbitMq server on other two virtual servers or should i use the Submaster clustered queue?</p>
								
															</section>
							<!-- end .comment-content -->
							
							<div class="reply">
															</div>
							<!-- end .reply -->
						</article>
						<!-- end #comment-## -->
					<ol class="children">
					
					<li class="comment odd alt depth-4" id="li-comment-40">
						<article id="comment-40" class="comment">
							<header class="comment-meta comment-author vcard">
								<img alt='' src='../../../avatar/a0c880ad31c66856b29f53e6c32d688b-2.jpeg?s=75&#038;d=mm&#038;r=g' srcset='../../../avatar/a0c880ad31c66856b29f53e6c32d688b-3.jpeg 2x?s=150&#038;d=mm&#038;r=g 2x' class='avatar avatar-75 photo' height='75' width='75' loading='lazy'><cite class="fn">dprothero </cite><a href="index.htm#comment-40"><time datetime="2015-01-12T04:18:00+00:00">January 12, 2015 at 4:18 am</time></a>							</header>
							<!-- end .comment-meta -->
							
														
							<section class="comment-content comment">
								<p>Because you are using the competing consumer pattern you must connect to the submaster machine for receiving messages. Otherwise, you risk processing duplicate messages. You can also use submaster to send messages as that keeps the configuration simpler.</p>
								
															</section>
							<!-- end .comment-content -->
							
							<div class="reply">
															</div>
							<!-- end .reply -->
						</article>
						<!-- end #comment-## -->
					<ol class="children">
					
					<li class="comment even depth-5" id="li-comment-41">
						<article id="comment-41" class="comment">
							<header class="comment-meta comment-author vcard">
								<img alt='' src='../../../avatar/949d9cdc11176d07c35c38ff7bfd1593.png?s=75&#038;d=mm&#038;r=g' srcset='../../../avatar/949d9cdc11176d07c35c38ff7bfd1593-1.png 2x?s=150&#038;d=mm&#038;r=g 2x' class='avatar avatar-75 photo' height='75' width='75' loading='lazy'><cite class="fn">Faisal Nadeem </cite><a href="index.htm#comment-41"><time datetime="2015-01-12T06:19:00+00:00">January 12, 2015 at 6:19 am</time></a>							</header>
							<!-- end .comment-meta -->
							
														
							<section class="comment-content comment">
								<p>So as per my understanding i will not install RabbitMq server on both subscriber servers, and i will only initialize MassTransit on both machines and connect to Submaster to receive messages.</p>
<p>At first i did the same, both Subscriber machines are receiving the messages, but when i try to respond to context than it is throwing the exception as i mentioned earlier.</p>
<p>Probably it is trying to accesses the publisher rabbitmq://localhost/SAPTCO.WebWare1.<br>
By the way when i connected to submaster and receiving messages, shall i respond directly to WebWare1 (Publisher)?</p>
								
															</section>
							<!-- end .comment-content -->
							
							<div class="reply">
															</div>
							<!-- end .reply -->
						</article>
						<!-- end #comment-## -->
					</li><!-- #comment-## -->
					
					<li class="comment odd alt depth-5" id="li-comment-42">
						<article id="comment-42" class="comment">
							<header class="comment-meta comment-author vcard">
								<img alt='' src='../../../avatar/a0c880ad31c66856b29f53e6c32d688b-2.jpeg?s=75&#038;d=mm&#038;r=g' srcset='../../../avatar/a0c880ad31c66856b29f53e6c32d688b-3.jpeg 2x?s=150&#038;d=mm&#038;r=g 2x' class='avatar avatar-75 photo' height='75' width='75' loading='lazy'><cite class="fn">dprothero </cite><a href="index.htm#comment-42"><time datetime="2015-01-12T15:13:00+00:00">January 12, 2015 at 3:13 pm</time></a>							</header>
							<!-- end .comment-meta -->
							
														
							<section class="comment-content comment">
								<p>I haven&#8217;t sent replies back to web applications. I would think, however, you would still want to use submaster to send the replies. Since all your rabbitmq servers are part of the same cluster, it will know how to route the messages (and hold onto them if the web server is down).</p>
								
															</section>
							<!-- end .comment-content -->
							
							<div class="reply">
															</div>
							<!-- end .reply -->
						</article>
						<!-- end #comment-## -->
					</li><!-- #comment-## -->
					
					<li class="comment even depth-5" id="li-comment-43">
						<article id="comment-43" class="comment">
							<header class="comment-meta comment-author vcard">
								<img alt='' src='../../../avatar/949d9cdc11176d07c35c38ff7bfd1593.png?s=75&#038;d=mm&#038;r=g' srcset='../../../avatar/949d9cdc11176d07c35c38ff7bfd1593-1.png 2x?s=150&#038;d=mm&#038;r=g 2x' class='avatar avatar-75 photo' height='75' width='75' loading='lazy'><cite class="fn">Faisal Nadeem </cite><a href="index.htm#comment-43"><time datetime="2015-01-12T23:35:00+00:00">January 12, 2015 at 11:35 pm</time></a>							</header>
							<!-- end .comment-meta -->
							
														
							<section class="comment-content comment">
								<p>Yeah actually problem lies here. When i respond to context, context has EndPoint URI of rabbitmq://localhost/SAPTCO.WebWare1. That is why it is throwing the exception.<br>
But if i install rabbitmq server on my both Virtual Servers with using same queue of SubMaster, it is responding back. But is it right mechanism?</p>
								
															</section>
							<!-- end .comment-content -->
							
							<div class="reply">
															</div>
							<!-- end .reply -->
						</article>
						<!-- end #comment-## -->
					</li><!-- #comment-## -->
					
					<li class="comment odd alt depth-5" id="li-comment-44">
						<article id="comment-44" class="comment">
							<header class="comment-meta comment-author vcard">
								<img alt='' src='../../../avatar/a0c880ad31c66856b29f53e6c32d688b-2.jpeg?s=75&#038;d=mm&#038;r=g' srcset='../../../avatar/a0c880ad31c66856b29f53e6c32d688b-3.jpeg 2x?s=150&#038;d=mm&#038;r=g 2x' class='avatar avatar-75 photo' height='75' width='75' loading='lazy'><cite class="fn">dprothero </cite><a href="index.htm#comment-44"><time datetime="2015-01-13T15:32:00+00:00">January 13, 2015 at 3:32 pm</time></a>							</header>
							<!-- end .comment-meta -->
							
														
							<section class="comment-content comment">
								<p>No, I don&#8217;t think so, but it&#8217;s hard to know without seeing your code. You don&#8217;t want your consumers to be connecting to different instances of RabbitMQ because they will pull duplicate messages off the queue. Can you just change the endpoint for your reply message?</p>
								
															</section>
							<!-- end .comment-content -->
							
							<div class="reply">
															</div>
							<!-- end .reply -->
						</article>
						<!-- end #comment-## -->
					</li><!-- #comment-## -->
					
					<li class="comment even depth-5" id="li-comment-46">
						<article id="comment-46" class="comment">
							<header class="comment-meta comment-author vcard">
								<img alt='' src='../../../avatar/949d9cdc11176d07c35c38ff7bfd1593.png?s=75&#038;d=mm&#038;r=g' srcset='../../../avatar/949d9cdc11176d07c35c38ff7bfd1593-1.png 2x?s=150&#038;d=mm&#038;r=g 2x' class='avatar avatar-75 photo' height='75' width='75' loading='lazy'><cite class="fn">Faisal Nadeem </cite><a href="index.htm#comment-46"><time datetime="2015-01-13T23:05:00+00:00">January 13, 2015 at 11:05 pm</time></a>							</header>
							<!-- end .comment-meta -->
							
														
							<section class="comment-content comment">
								<p>Actually there are real time transactions. I have developed a booking system. When request comes for trips search, i have to send response real time and to the same request. Any idea how can i send response out of message context?</p>
								
															</section>
							<!-- end .comment-content -->
							
							<div class="reply">
															</div>
							<!-- end .reply -->
						</article>
						<!-- end #comment-## -->
					</li><!-- #comment-## -->
					
					<li class="comment odd alt depth-5" id="li-comment-47">
						<article id="comment-47" class="comment">
							<header class="comment-meta comment-author vcard">
								<img alt='' src='../../../avatar/a0c880ad31c66856b29f53e6c32d688b-2.jpeg?s=75&#038;d=mm&#038;r=g' srcset='../../../avatar/a0c880ad31c66856b29f53e6c32d688b-3.jpeg 2x?s=150&#038;d=mm&#038;r=g 2x' class='avatar avatar-75 photo' height='75' width='75' loading='lazy'><cite class="fn">dprothero </cite><a href="index.htm#comment-47"><time datetime="2015-01-15T03:44:00+00:00">January 15, 2015 at 3:44 am</time></a>							</header>
							<!-- end .comment-meta -->
							
														
							<section class="comment-content comment">
								<p>I have not done that, no. You might try the MassTransit mailing list. <a href="https://groups.google.com/forum/#!forum/masstransit-discuss" rel="nofollow ugc">https://groups.google.com/forum/#!forum/masstransit-discuss</a></p>
								
															</section>
							<!-- end .comment-content -->
							
							<div class="reply">
															</div>
							<!-- end .reply -->
						</article>
						<!-- end #comment-## -->
					</li><!-- #comment-## -->
					
					<li class="comment even depth-5" id="li-comment-48">
						<article id="comment-48" class="comment">
							<header class="comment-meta comment-author vcard">
								<img alt='' src='../../../avatar/949d9cdc11176d07c35c38ff7bfd1593.png?s=75&#038;d=mm&#038;r=g' srcset='../../../avatar/949d9cdc11176d07c35c38ff7bfd1593-1.png 2x?s=150&#038;d=mm&#038;r=g 2x' class='avatar avatar-75 photo' height='75' width='75' loading='lazy'><cite class="fn">Faisal Nadeem </cite><a href="index.htm#comment-48"><time datetime="2015-01-17T00:48:00+00:00">January 17, 2015 at 12:48 am</time></a>							</header>
							<!-- end .comment-meta -->
							
														
							<section class="comment-content comment">
								<p>thanks David. I achieved it by downgrading MT to 2.6.5 and implemented distributor using MSMQ, distributor doesn&#8217;t work on latest MT build.</p>
								
															</section>
							<!-- end .comment-content -->
							
							<div class="reply">
															</div>
							<!-- end .reply -->
						</article>
						<!-- end #comment-## -->
					</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
					
					<li class="comment odd alt thread-even depth-1" id="li-comment-53">
						<article id="comment-53" class="comment">
							<header class="comment-meta comment-author vcard">
								<img alt='' src='../../../avatar/cd60cec3f837eefa33240950d992fa5b.png?s=75&#038;d=mm&#038;r=g' srcset='../../../avatar/cd60cec3f837eefa33240950d992fa5b-1.png 2x?s=150&#038;d=mm&#038;r=g 2x' class='avatar avatar-75 photo' height='75' width='75' loading='lazy'><cite class="fn">Nipun Joshi </cite><a href="index.htm#comment-53"><time datetime="2015-04-09T17:50:00+00:00">April 9, 2015 at 5:50 pm</time></a>							</header>
							<!-- end .comment-meta -->
							
														
							<section class="comment-content comment">
								<p>Great series! Kudos and keep up the great writing.</p>
<p>What would be your recommendation in the scenario can both consume and publish messages. Also, there can be, let&#8217;s say 5 applications that participate in the process, each consumes from one queue, processes and then publishes back to an exchange with a different queue? So each application acts as a consumer as well as publisher.</p>
<p>My thought is that you can have a webserver running all the applications, and all talking to one RabbitMQ instance. Scale out this setup to other webservers and each webserver has its own dedicated RabbitMQ instance. All RMQ instances would be clustered. Mostly like the setup you mentioned above, the only difference being both the publisher and subscriber would have the same RMQ instance that they would talk to from one webserver, unless any RMQ instance goes down and in that case, the applications would throw &#8220;Send exception&#8221; while consuming or publishing. The exception should not be a problem as other webservers would continue to process the messages, since its a clustered RMQ environment.</p>
<p>Or would you prefer having a load balancer in between the webservers and RMQ cluster instead?</p>
								
															</section>
							<!-- end .comment-content -->
							
							<div class="reply">
															</div>
							<!-- end .reply -->
						</article>
						<!-- end #comment-## -->
					</li><!-- #comment-## -->
				</ol>
				<!-- end .commentlist -->
				
								
											<p class="nocomments">Comments are closed.</p>
										
	</div>
<!-- end #comments -->								</div>
		<!-- end .blog-single -->
	</div>
	<!-- end #content -->
</div>
<!-- end #primary -->

			</div>
			<!-- end .row .row-fluid -->
        </section>
        <!-- end #main -->
		
        <footer class="site-footer wrapper" role="contentinfo">
			<div class="row">
				<div id="supplementary" class="row-fluid">
									</div>
				<!-- end #supplementary -->
				
				<div class="site-info">
					Copyright © 2014 by David Prothero
All rights reserved.				</div>
				<!-- end .site-info -->
			</div>
			<!-- end .row -->
        </footer>
        <!-- end .site-footer -->
    </div>
    <!-- end #PAGE -->
	
	<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-1922425-8', 'auto');
  ga('send', 'pageview');

</script>
<script type="text/javascript">
  SyntaxHighlighter.all();
</script><script type='text/javascript' src='../../../wp-includes/js/comment-reply.min.js?ver=5.8.6' id='comment-reply-js'></script>
<script type='text/javascript' src='../../../wp-content/themes/read-v4-2-4/js/detectmobilebrowser.js' id='detectmobilebrowser-js'></script>
<script type='text/javascript' src='../../../wp-content/themes/read-v4-2-4/js/modernizr.js' id='modernizr-js'></script>
<script type='text/javascript' src='../../../wp-includes/js/imagesloaded.min.js?ver=4.1.4' id='imagesloaded-js'></script>
<script type='text/javascript' src='../../../wp-content/themes/read-v4-2-4/js/jquery.fitvids.js' id='fitvids-js'></script>
<script type='text/javascript' src='../../../wp-content/themes/read-v4-2-4/js/google-code-prettify/prettify.js' id='google-code-prettify-js'></script>
<script type='text/javascript' src='../../../wp-content/themes/read-v4-2-4/js/jquery.uniform.min.js' id='uniform-js'></script>
<script type='text/javascript' src='../../../wp-content/themes/read-v4-2-4/js/jquery.flexslider-min.js' id='flexslider-js'></script>
<script type='text/javascript' src='../../../wp-content/themes/read-v4-2-4/js/mediaelement/mediaelement-and-player.min.js' id='mediaelement-and-player-js'></script>
<script type='text/javascript' src='../../../wp-content/themes/read-v4-2-4/js/jquery.isotope.min.js' id='isotope-js'></script>
<script type='text/javascript' src='../../../wp-content/themes/read-v4-2-4/js/jquery.fancybox-1.3.4.pack.js' id='fancybox-js'></script>
<script type='text/javascript' src='../../../wp-content/themes/read-v4-2-4/js/jquery.masonry.min.js' id='masonry-js'></script>
<script type='text/javascript' src='../../../wp-content/themes/read-v4-2-4/js/jquery.history.js' id='history-js'></script>
<script type='text/javascript' src='../../../wp-content/themes/read-v4-2-4/js/js-url.min.js' id='js-url-js'></script>
<script type='text/javascript' src='../../../wp-content/themes/read-v4-2-4/js/jquerypp.custom.js' id='jquerypp-custom-js'></script>
<script type='text/javascript' src='../../../wp-content/themes/read-v4-2-4/js/gamma.js' id='gamma-js'></script>
<script type='text/javascript' src='../../../wp-content/themes/read-v4-2-4/js/main.js' id='main-js'></script>
<script type='text/javascript' src='../../../wp-content/themes/read-v4-2-4/js/jquery.validate.min.js' id='validate-js'></script>
<script type='text/javascript' src='../../../wp-content/themes/read-v4-2-4/js/send-mail.js' id='send-mail-js'></script>
<script type='text/javascript' src='../../../wp-includes/js/wp-embed.min.js?ver=5.8.6' id='wp-embed-js'></script>
</body>
</html>